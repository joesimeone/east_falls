---
title: "Untitled"
format: 
  dashboard:
    embed-resources: true
    scrolling: true
    
---


```{r}
#| label: "load libraries & import"
#| include: false

library(rcartocolor)
library(sysfonts)
library(tidyverse)
library(here)
library(showtext)
library(rcartocolor)
library(extrafont)
library(plotly)


## Look through directories
east_falls_files <- 
  list.files(here("data"),
             pattern = "east_falls",
             full.names = TRUE)

## Narrow to R objects
east_falls_files <- 
  east_falls_files[grep("csv", 
                   east_falls_files, 
                   invert = TRUE)]

## Look through directories
phl_files <-
  list.files(here("data"),
             pattern = "phl_",
             full.names = TRUE)

## Narrow to R Objects  
phl_files <- 
  phl_files[grep("csv", 
            phl_files, 
            invert = TRUE)]


## Import 
east_falls <-
  map(east_falls_files, 
      ~readRDS(.x))

philly <-
  map(phl_files, readRDS)


## Name my lists
list_names <- c("edu", "income", "race", "sex_age")

names(east_falls) <- list_names
names(philly) <- list_names

```

```{r}
#| label: "lol"
#| echo: false

font_add_google(name = "Source Sans Pro", family = "inter")
showtext_auto()

   joes_dumb_theme <-
      theme(panel.background = 
              element_rect(fill = "#3b3b3b"),
              element_line(element_blank()),
              panel.grid.major = element_blank(),
              panel.grid.minor = element_blank(),
              axis.line = element_line(color = "lightgray"),
              axis.text = element_text(color = "lightgray"),
              axis.title = element_text(color = "lightgray"),
              plot.background = 
                element_rect("#3b3b3b"),
              panel.border = element_blank(),
              legend.position = "none",
              text = element_text(family = "inter",
                                  size = 12)) 

theme_set(joes_dumb_theme)



```


```{r}
#| label: Import summary tables script
#| include: false

source("helper_scripts/east_falls_phl_calcs.R")
```

# Data {orientation="rows" scrolling="true"}

## Age & Sex {height="25%"}

### East Falls {width="50%"}
```{r}
#| title: "Oh Noo, what are thoseeeee"
#| fig-width: 8
#| fig-height: 6

sex_by_age_cl <-
  east_falls_tbls$sex_age %>%
  group_by(broader_age_groups, gender) %>% 
  summarise(across(is.numeric,
                   ~(sum(.)))) %>% 
  distinct(broader_age_groups, gender, 
           .keep_all = TRUE) %>% 
  mutate(broader_age_groups =
           fct_relevel(broader_age_groups,
                       c("17 & Under", "18 - 34",
                         "35 - 54", "55 - 74",  "75 & Over")),
          graph_est =
           if_else(gender == "Female",
                   -east_falls_est, east_falls_est))

## Graph elements
abs_axis <- c(-2000, -1000, 0, 1000, 2000)
fill_colors <- c("#BEBADA", "#FDB462")


age_sex_graph <-
  ggplot(sex_by_age_cl,
         aes(graph_est, 
             broader_age_groups, 
             fill = gender)) +
  geom_col() +
  scale_fill_manual(values = fill_colors) +
  scale_x_continuous(breaks = abs_axis,
                     labels = abs(abs_axis)) + 
  labs(y = "Age Group", 
       x = "Estimate")

age_sex_graph

```

### Phl {width="50%"}
```{r}
ggplot(sex_by_age_cl, 
       aes(graph_est,
           broader_age_groups, 
           fill = gender)) +
  geom_col() +
  scale_fill_manual(values = fill_colors) +
  scale_x_continuous(breaks = abs_axis,
                     labels = abs(abs_axis)) + 
  labs(y = "Age Group", 
       x = "Estimate")
```


## Income {height="25%"}

### East Falls {width="50%"}
```{r}
#| label: rawr
#| echo: false
#| fig.width: 7
#| fig.height: 5

income_graph <-
  ggplot(east_falls_tbls$income, 
       aes(x = east_falls_est, 
           y = income_bracket, 
           fill = income_bracket)) +
  geom_col() + 
  labs(y = "") +
  scale_fill_carto_d(palette = "Purp")
  
  ggplotly(income_graph)
```

### Phl {Width="50%}


```{r}
#| label: come on 
#| fig-width: 8
#| fig-height: 6 

phl_east_falls_inc <-
  phl_east_falls$income %>% 
   pivot_longer(cols = c("est_pct", "phl_est_pct"), 
                values_to = "percentages",
                names_to = "calcs") %>% 
  mutate(calc_labels = 
           if_else(calcs == "phl_est_pct",
                   "Philadelphia", "East Falls")) %>% 
  ggplot(aes(percentages, income_bracket)) +
  geom_line() +
  geom_point(aes(color = calc_labels), size = 3) +
  scale_x_continuous(labels = scales::percent)  +
  scale_color_manual(values = c("#C19FE0", "lightgray"),
                     labels = c("East Falls", "Philadelphia CO.")) +
  theme(legend.position = "bottom",
        legend.background = element_rect(fill = "#3b3b3b",
                                         color = "#3b3b3b"),
        legend.text = element_text(color = "lightgray"),
        legend.title = element_text(color = "lightgray")) +
  labs(color='City Comparison',
       y = "",
       x = "Percentage")
  
 ggplotly(phl_east_falls_inc)
  

```
## Education {height="25%"}

### East Falls {width="50%"}

```{r}
#| include: false


edu_graph <- 
  ggplot(east_falls$edu, 
         aes(estimate, 
             edu_level, 
             fill = edu_level)
         ) +
  geom_col() +
  labs(y = "") +
  scale_fill_brewer(palette = "Oranges")
```

```{r}
#| label: "hmm"
#| echo: false 

plotly::ggplotly(edu_graph)
```
### Phl {width="50%"}
```{r}
#| label: "why"
#| echo: false 

phl_east_falls_edu <-
  phl_east_falls$edu %>% 
   pivot_longer(cols = c("est_pct", "phl_est_pct"), 
                values_to = "percentages",
                names_to = "calcs") %>% 
  mutate(calc_labels = 
           if_else(calcs == "phl_est_pct",
                   "Philadelphia", "East Falls")) %>% 
  ggplot(aes(percentages, edu_level)) +
  geom_line() +
  geom_point(aes(color = calc_labels), size = 3) +
  scale_x_continuous(labels = scales::percent)  +
  scale_color_manual(values = c("#F16913", "lightgray"),
                     labels = c("East Falls", "Philadelphia CO.")) +
  theme(legend.position = "bottom",
        legend.background = element_rect(fill = "#3b3b3b",
                                         color = "#3b3b3b"),
        legend.text = element_text(color = "lightgray"),
        legend.title = element_text(color = "lightgray")) +
  labs(color='City Comparison',
       y = "",
       x = "Percentage")
  
 ggplotly(phl_east_falls_edu)

```


## Race & Ethnicity {height="25%"}

### East falls {width="50%"}
```{r}
ggplot(east_falls$race, aes(estimate, racial_category, fill = racial_category)) +
geom_col() +
scale_fill_brewer(palette = "Set3")
```
### Phl {width="50%"}

```{r}
phl_east_falls_race <-
  phl_east_falls$race %>% 
   pivot_longer(cols = c("est_pct", "phl_est_pct"), 
                values_to = "percentages",
                names_to = "calcs") %>% 
  mutate(calc_labels = 
           if_else(calcs == "phl_est_pct",
                   "Philadelphia", "East Falls")) %>% 
  ggplot(aes(percentages, racial_category)) +
  geom_line() +
  geom_point(aes(color = calc_labels), size = 3) +
  scale_x_continuous(labels = scales::percent)  +
  scale_color_manual(values = c("#80B1D3", "lightgray"),
                     labels = c("East Falls", "Philadelphia CO.")) +
  theme(legend.position = "bottom",
        legend.background = element_rect(fill = "#3b3b3b",
                                         color = "#3b3b3b"),
        legend.text = element_text(color = "lightgray"),
        legend.title = element_text(color = "lightgray")) +
  labs(color='City Comparison',
       y = "",
       x = "Percentage")
  
 ggplotly(phl_east_falls_race)
 
```

